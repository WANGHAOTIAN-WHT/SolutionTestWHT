<#@ template debug="false" hostspecific="True" language="C#" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ include file="SQLServer.ttinclude" #>
//生成多文件工具类
<#@ include file="MultipleOutputHelper.ttinclude"#> 


<#
    var tables = LoadTables();
	//创建多文件生成实体
    var manager = Manager.Create(Host, GenerationEnvironment);  
    //遍历所有表
    foreach(var tbl in tables){

		//判断当前表名是否是禁用名称（禁用的名称可以在Settings.ttinclude文件的ExcludeTables字符串数据中进行添加）
		if(!ExcludeTables.Contains(tbl.Name))
		{
			// 设置输出的文件名
			manager.StartNewFile(tbl.ClassName+".cs");	
#>

	using System;

	namespace <#=Namespace#> {
		
		public class <#=tbl.CleanName#>Table{
			
			/// <summary>
			/// 表名
			/// </summary>
			public static string TableName{
				get{
					return "<#=tbl.CleanName#>";
				}
			}

<#
			foreach(var col in tbl.Columns){
#>
			/// <summary>
			/// <#=Replace(col.Description) #>
			/// </summary>
			public static string <#=col.Name #>{
				get{
					return "<#=col.Name #>";
				}
			}
<#
			}
#>
		}
	}
<#
			//文件输出结束
			manager.EndBlock();
		}//if(!ExcludeTables.Contains(tbl.Name)) 判断结束
	}// end foreach

	//执行编译，生成文件
	manager.Process(true);
#>